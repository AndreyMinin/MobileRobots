<?xml version='1.0'?>
<sdf version='1.5'>
	<model name='cart'>
		<include>
			<uri>model://polaris_ranger_ev</uri>
			<name>cart</name>
		</include>

		<plugin name="vehicle control" filename="libvehicle_ros_plugin.so">
			<front_left_wheel_joint>cart::front_left_wheel_joint</front_left_wheel_joint>
			<front_right_wheel_joint>cart::front_right_wheel_joint</front_right_wheel_joint>
			<front_left_steering_joint>cart::front_left_steering_joint</front_left_steering_joint>
			<front_right_steering_joint>cart::front_right_steering_joint</front_right_steering_joint>
			<rear_left_wheel_joint>cart::rear_left_wheel_joint</rear_left_wheel_joint>
			<rear_right_wheel_joint>cart::rear_right_wheel_joint</rear_right_wheel_joint>
			<robotNamespace>robot</robotNamespace>
			<command_topic>cmd_vel</command_topic>
			<odo_topic>odom</odo_topic>
			<odom_frame>odom</odom_frame>
			<base_Frame>base_link</base_Frame>
			<steering_angle_topic>steering</steering_angle_topic>
			<velocity_topic>velocity</velocity_topic>
			<publishJointState>true</publishJointState>
			<wheel_separation>1.2</wheel_separation>
			<wheel_diameter>0.64</wheel_diameter>
			<axes_separation>1.88</axes_separation>
			<vehicle_accel>1.5</vehicle_accel>
			<wheel_torque>50000</wheel_torque>
			<curvature_rate>0.3</curvature_rate>
			<steering_torque>50000</steering_torque>
			<update_rate>10</update_rate>
			<min_radius>5.0</min_radius>
			<encoder_wheels>rear</encoder_wheels>
			<drive_wheels>rear</drive_wheels>
		</plugin>
		<plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
			<robotNamespace>robot</robotNamespace>
			<alwaysOn>true</alwaysOn>
			<updateRate>20.0</updateRate>
			<bodyName>cart::chassis</bodyName>
			<topicName>base_pose_ground_truth</topicName>
			<gaussianNoise>0</gaussianNoise>
			<frameName>world</frameName>
			<xyzOffsets>0 0 0</xyzOffsets>
			<rpyOffsets>0 0 3.141596</rpyOffsets>
			<interface:position name="p3d_base_position" />
		</plugin>

		<plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
			<robotNamespace>robot</robotNamespace>
			<alwaysOn>true</alwaysOn>
			<bodyName>cart::chassis</bodyName>
			<topicName>imu</topicName>
			<serviceName>imu_service</serviceName>
			<gaussianNoise>0.0</gaussianNoise>
			<updateRate>20.0</updateRate>
		</plugin>


		<!--camera joints links and plugin -->
		<link name="camera_link">
			<pose>0.4 0 1.8 0.0 0.2 0</pose>
			<collision name="colision">
				<geometry>
					<box>
						<size>0.15 0.05 0.05</size>
					</box>
				</geometry>
			</collision>

			<visual name="visual">

				<geometry>
					<box>
						<size>0.15 0.05 0.05</size>
					</box>
				</geometry>
				<material>
					<script>
						<name>Gazebo/Blue</name>
					</script>
				</material>
			</visual>

			<inertial>
				<mass>1e-5</mass>
				<inertia>
					<ixx>1e-5</ixx>
					<ixy>0</ixy>
					<iyy>1e-6</iyy>
					<ixz>0</ixz>
					<iyz>0</iyz>
					<izz>1e-6</izz>
				</inertia>
			</inertial>

			<sensor name="camera" type="camera">
				<camera>
					<horizontal_fov>1.047</horizontal_fov>
					<image>
						<width>320</width>
						<height>240</height>
					</image>
					<clip>
						<near>0.1</near>
						<far>100</far>
					</clip>
				</camera>
				<always_on>1</always_on>
				<update_rate>10</update_rate>
				<visualize>false</visualize>
				<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
					<robotNamespace>robot</robotNamespace>
					<alwaysOn>true</alwaysOn>
					<updateRate>0.0</updateRate>
					<cameraName>camera1</cameraName>
					<imageTopicName>image_raw</imageTopicName>
					<cameraInfoTopicName>camera_info</cameraInfoTopicName>
					<frameName>camera_link</frameName>
					<hackBaseline>0.07</hackBaseline>
					<distortionK1>0.0</distortionK1>
					<distortionK2>0.0</distortionK2>
					<distortionK3>0.0</distortionK3>
					<distortionT1>0.0</distortionT1>
					<distortionT2>0.0</distortionT2>
				</plugin>
			</sensor>
		</link>
		<joint name="camera_joint" type="fixed">
			<parent>cart::chassis</parent>
			<child>camera_link</child>
		</joint>
		<!--end of camera -->

		<!-- lidar range finder -->
		<link name="lidar_link">
			<pose>1.4 0 0.6 0.0 0 0</pose>
			<collision name="colision">
				<geometry>
					<box>
						<size>0.3 0.3 0.3</size>
					</box>
				</geometry>
			</collision>

			<visual name="visual">

				<geometry>
					<box>
						<size>0.3 0.3 0.3</size>
					</box>
				</geometry>
				<material>
					<script>
						<name>Gazebo/Blue</name>
					</script>
				</material>
			</visual>

			<inertial>
				<mass>1.2</mass>
				<inertia>
					<ixx>0.015</ixx>
					<ixy>0</ixy>
					<iyy>0.015</iyy>
					<ixz>0</ixz>
					<iyz>0</iyz>
					<izz>0.015</izz>
				</inertia>
			</inertial>
			<sensor type="ray" name="lidar_sensor">
				<pose>0 0 0 0 0 0</pose>
				<visualize>true</visualize>
				<update_rate>10</update_rate>
				<ray>
					<scan>
						<horizontal>
							<samples>180</samples>
							<resolution>1</resolution>
							<min_angle>-1.570796</min_angle>
							<max_angle>1.570796</max_angle>
						</horizontal>
					</scan>
					<range>
						<min>0.30</min>
						<max>30.0</max>
						<resolution>0.01</resolution>
					</range>
					<noise>
						<type>gaussian</type>
						<mean>0.0</mean>
						<stddev>0.005</stddev>
					</noise>
				</ray>
				<plugin name="lidar_controller" filename="libgazebo_ros_laser.so">
					<robotNamespace>robot</robotNamespace>
					<topicName>laser/scan</topicName>
					<frameName>lidar_link</frameName>
				</plugin>
			</sensor>
		</link>
		<joint name="lidar_joint" type="fixed">
			<parent>cart::chassis</parent>
			<child>lidar_link</child>
		</joint>
		<!-- end of lidar -->

	</model>


</sdf>
